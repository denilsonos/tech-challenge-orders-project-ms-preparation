name: Node.js CD

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: fiap-app
  EKS_CLUSTER_NAME: fiap-eks
  AWS_REGION: us-east-1 
    
jobs:
    
  CD:
    runs-on: ubuntu-latest
    steps: 
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2
      
      - name: Check out code
        uses: actions/checkout@v2

      - name: Checkout Kubernetes config files
        uses: actions/checkout@v2
        with:
          repository: denilsonos/tech-challenge-orders-project-k8s
          path: k8s
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Create .env file
        run: |
          echo DB_HOST="${{secrets.DB_HOST}}" > .env
          echo DB_USER="${{secrets.DB_USER}}" >> .env
          echo DB_PASSWORD="${{secrets.DB_PASSWORD}}" >> .env
          echo DB_NAME="${{secrets.DB_NAME}}" >> .env
          echo DB_PORT="${{secrets.DB_PORT}}" >> .env
          echo APP_PORT="${{secrets.APP_PORT}}" >> .env
          echo APP_HOST="${{secrets.APP_HOST}}" >> .env
          echo NODE_ENV="${{secrets.NODE_ENV}}" >> .env
          echo AWS_URL_COGNITO="${{secrets.AWS_URL_COGNITO}}" >> .env

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
         
      - name: Create Kubernetes secret from .env file
        run: |
          kubectl delete secret app-secret --ignore-not-found
          kubectl create secret generic app-secret --from-env-file=.env

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |  
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment-app.yaml && \
          kubectl apply -f k8s/ --validate=false
                  